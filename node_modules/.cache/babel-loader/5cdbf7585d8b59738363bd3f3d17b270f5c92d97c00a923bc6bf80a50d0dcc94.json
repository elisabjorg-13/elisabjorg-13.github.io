{"ast":null,"code":"import _objectSpread from \"/Users/elisabjorg/Documents/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { useSpinner } from \"./chunk-EQVUDELC.mjs\";\n\n// src/spinner.tsx\nimport { forwardRef } from \"@nextui-org/system-rsc\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Spinner = forwardRef(function (props, ref) {\n  var _useSpinner = useSpinner(_objectSpread({}, props)),\n    slots = _useSpinner.slots,\n    classNames = _useSpinner.classNames,\n    label = _useSpinner.label,\n    getSpinnerProps = _useSpinner.getSpinnerProps;\n  return /* @__PURE__ */jsxs(\"div\", _objectSpread(_objectSpread({\n    ref: ref\n  }, getSpinnerProps()), {}, {\n    children: [/* @__PURE__ */jsxs(\"div\", {\n      className: slots.wrapper({\n        class: classNames == null ? void 0 : classNames.wrapper\n      }),\n      children: [/* @__PURE__ */jsx(\"i\", {\n        className: slots.circle1({\n          class: classNames == null ? void 0 : classNames.circle1\n        })\n      }), /* @__PURE__ */jsx(\"i\", {\n        className: slots.circle2({\n          class: classNames == null ? void 0 : classNames.circle2\n        })\n      })]\n    }), label && /* @__PURE__ */jsx(\"span\", {\n      className: slots.label(),\n      children: label\n    })]\n  }));\n});\nSpinner.displayName = \"NextUI.Spinner\";\nvar spinner_default = Spinner;\nexport { spinner_default };","map":{"version":3,"names":["useSpinner","forwardRef","jsx","jsxs","Spinner","props","ref","_useSpinner","_objectSpread","slots","classNames","label","getSpinnerProps","children","className","wrapper","class","circle1","circle2","displayName","spinner_default"],"sources":["/Users/elisabjorg/Documents/my-app/node_modules/@nextui-org/spinner/dist/chunk-YOBXD5IP.mjs"],"sourcesContent":["import {\n  useSpinner\n} from \"./chunk-EQVUDELC.mjs\";\n\n// src/spinner.tsx\nimport { forwardRef } from \"@nextui-org/system-rsc\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Spinner = forwardRef((props, ref) => {\n  const { slots, classNames, label, getSpinnerProps } = useSpinner({ ...props });\n  return /* @__PURE__ */ jsxs(\"div\", { ref, ...getSpinnerProps(), children: [\n    /* @__PURE__ */ jsxs(\"div\", { className: slots.wrapper({ class: classNames == null ? void 0 : classNames.wrapper }), children: [\n      /* @__PURE__ */ jsx(\"i\", { className: slots.circle1({ class: classNames == null ? void 0 : classNames.circle1 }) }),\n      /* @__PURE__ */ jsx(\"i\", { className: slots.circle2({ class: classNames == null ? void 0 : classNames.circle2 }) })\n    ] }),\n    label && /* @__PURE__ */ jsx(\"span\", { className: slots.label(), children: label })\n  ] });\n});\nSpinner.displayName = \"NextUI.Spinner\";\nvar spinner_default = Spinner;\n\nexport {\n  spinner_default\n};\n"],"mappings":";AAAA,SACEA,UAAU,QACL,sBAAsB;;AAE7B;AACA,SAASC,UAAU,QAAQ,wBAAwB;AACnD,SAASC,GAAG,EAAEC,IAAI,QAAQ,mBAAmB;AAC7C,IAAIC,OAAO,GAAGH,UAAU,CAAC,UAACI,KAAK,EAAEC,GAAG,EAAK;EACvC,IAAAC,WAAA,GAAsDP,UAAU,CAAAQ,aAAA,KAAMH,KAAK,CAAE,CAAC;IAAtEI,KAAK,GAAAF,WAAA,CAALE,KAAK;IAAEC,UAAU,GAAAH,WAAA,CAAVG,UAAU;IAAEC,KAAK,GAAAJ,WAAA,CAALI,KAAK;IAAEC,eAAe,GAAAL,WAAA,CAAfK,eAAe;EACjD,OAAO,eAAgBT,IAAI,CAAC,KAAK,EAAAK,aAAA,CAAAA,aAAA;IAAIF,GAAG,EAAHA;EAAG,GAAKM,eAAe,CAAC,CAAC;IAAEC,QAAQ,EAAE,CACxE,eAAgBV,IAAI,CAAC,KAAK,EAAE;MAAEW,SAAS,EAAEL,KAAK,CAACM,OAAO,CAAC;QAAEC,KAAK,EAAEN,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACK;MAAQ,CAAC,CAAC;MAAEF,QAAQ,EAAE,CAC7H,eAAgBX,GAAG,CAAC,GAAG,EAAE;QAAEY,SAAS,EAAEL,KAAK,CAACQ,OAAO,CAAC;UAAED,KAAK,EAAEN,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACO;QAAQ,CAAC;MAAE,CAAC,CAAC,EACnH,eAAgBf,GAAG,CAAC,GAAG,EAAE;QAAEY,SAAS,EAAEL,KAAK,CAACS,OAAO,CAAC;UAAEF,KAAK,EAAEN,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACQ;QAAQ,CAAC;MAAE,CAAC,CAAC;IACnH,CAAC,CAAC,EACJP,KAAK,IAAI,eAAgBT,GAAG,CAAC,MAAM,EAAE;MAAEY,SAAS,EAAEL,KAAK,CAACE,KAAK,CAAC,CAAC;MAAEE,QAAQ,EAAEF;IAAM,CAAC,CAAC;EACpF,EAAE,CAAC;AACN,CAAC,CAAC;AACFP,OAAO,CAACe,WAAW,GAAG,gBAAgB;AACtC,IAAIC,eAAe,GAAGhB,OAAO;AAE7B,SACEgB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}