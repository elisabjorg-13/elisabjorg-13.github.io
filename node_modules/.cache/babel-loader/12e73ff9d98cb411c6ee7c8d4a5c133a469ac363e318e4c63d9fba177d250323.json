{"ast":null,"code":"// src/index.ts\nimport { filterDOMProps, mergeProps } from \"@react-aria/utils\";\nimport { useFocusable } from \"@react-aria/focus\";\nimport { usePress } from \"@react-aria/interactions\";\nfunction useAriaButton(props, ref) {\n  var _props$elementType = props.elementType,\n    elementType = _props$elementType === void 0 ? \"button\" : _props$elementType,\n    isDisabled = props.isDisabled,\n    onPress = props.onPress,\n    onPressStart = props.onPressStart,\n    onPressEnd = props.onPressEnd,\n    onPressChange = props.onPressChange,\n    preventFocusOnPress = props.preventFocusOnPress,\n    allowFocusWhenDisabled = props.allowFocusWhenDisabled,\n    deprecatedOnClick = props.onClick,\n    href = props.href,\n    target = props.target,\n    rel = props.rel,\n    _props$type = props.type,\n    type = _props$type === void 0 ? \"button\" : _props$type,\n    allowTextSelectionOnPress = props.allowTextSelectionOnPress;\n  var additionalProps;\n  if (elementType === \"button\") {\n    additionalProps = {\n      type: type,\n      disabled: isDisabled\n    };\n  } else {\n    additionalProps = {\n      role: \"button\",\n      tabIndex: isDisabled ? void 0 : 0,\n      href: elementType === \"a\" && isDisabled ? void 0 : href,\n      target: elementType === \"a\" ? target : void 0,\n      type: elementType === \"input\" ? type : void 0,\n      disabled: elementType === \"input\" ? isDisabled : void 0,\n      \"aria-disabled\": !isDisabled || elementType === \"input\" ? void 0 : isDisabled,\n      rel: elementType === \"a\" ? rel : void 0\n    };\n  }\n  var _usePress = usePress({\n      onPressStart: onPressStart,\n      onPressEnd: onPressEnd,\n      onPressChange: onPressChange,\n      onPress: onPress,\n      isDisabled: isDisabled,\n      preventFocusOnPress: preventFocusOnPress,\n      allowTextSelectionOnPress: allowTextSelectionOnPress,\n      ref: ref\n    }),\n    pressProps = _usePress.pressProps,\n    isPressed = _usePress.isPressed;\n  var _useFocusable = useFocusable(props, ref),\n    focusableProps = _useFocusable.focusableProps;\n  if (allowFocusWhenDisabled) {\n    focusableProps.tabIndex = isDisabled ? -1 : focusableProps.tabIndex;\n  }\n  var buttonProps = mergeProps(focusableProps, pressProps, filterDOMProps(props, {\n    labelable: true\n  }));\n  return {\n    isPressed: isPressed,\n    buttonProps: mergeProps(additionalProps, buttonProps, {\n      \"aria-haspopup\": props[\"aria-haspopup\"],\n      \"aria-expanded\": props[\"aria-expanded\"],\n      \"aria-controls\": props[\"aria-controls\"],\n      \"aria-pressed\": props[\"aria-pressed\"],\n      onClick: function onClick(e) {\n        if (deprecatedOnClick) {\n          deprecatedOnClick(e);\n        }\n      }\n    })\n  };\n}\nexport { useAriaButton };","map":{"version":3,"names":["filterDOMProps","mergeProps","useFocusable","usePress","useAriaButton","props","ref","_props$elementType","elementType","isDisabled","onPress","onPressStart","onPressEnd","onPressChange","preventFocusOnPress","allowFocusWhenDisabled","deprecatedOnClick","onClick","href","target","rel","_props$type","type","allowTextSelectionOnPress","additionalProps","disabled","role","tabIndex","_usePress","pressProps","isPressed","_useFocusable","focusableProps","buttonProps","labelable","e"],"sources":["/Users/elisabjorg/Documents/elisabjorg-13/elisabjorg-13.github.io/node_modules/@nextui-org/use-aria-button/dist/index.mjs"],"sourcesContent":["// src/index.ts\nimport { filterDOMProps, mergeProps } from \"@react-aria/utils\";\nimport { useFocusable } from \"@react-aria/focus\";\nimport { usePress } from \"@react-aria/interactions\";\nfunction useAriaButton(props, ref) {\n  let {\n    elementType = \"button\",\n    isDisabled,\n    onPress,\n    onPressStart,\n    onPressEnd,\n    onPressChange,\n    preventFocusOnPress,\n    allowFocusWhenDisabled,\n    onClick: deprecatedOnClick,\n    href,\n    target,\n    rel,\n    type = \"button\",\n    allowTextSelectionOnPress\n  } = props;\n  let additionalProps;\n  if (elementType === \"button\") {\n    additionalProps = {\n      type,\n      disabled: isDisabled\n    };\n  } else {\n    additionalProps = {\n      role: \"button\",\n      tabIndex: isDisabled ? void 0 : 0,\n      href: elementType === \"a\" && isDisabled ? void 0 : href,\n      target: elementType === \"a\" ? target : void 0,\n      type: elementType === \"input\" ? type : void 0,\n      disabled: elementType === \"input\" ? isDisabled : void 0,\n      \"aria-disabled\": !isDisabled || elementType === \"input\" ? void 0 : isDisabled,\n      rel: elementType === \"a\" ? rel : void 0\n    };\n  }\n  let { pressProps, isPressed } = usePress({\n    onPressStart,\n    onPressEnd,\n    onPressChange,\n    onPress,\n    isDisabled,\n    preventFocusOnPress,\n    allowTextSelectionOnPress,\n    ref\n  });\n  let { focusableProps } = useFocusable(props, ref);\n  if (allowFocusWhenDisabled) {\n    focusableProps.tabIndex = isDisabled ? -1 : focusableProps.tabIndex;\n  }\n  let buttonProps = mergeProps(\n    focusableProps,\n    pressProps,\n    filterDOMProps(props, { labelable: true })\n  );\n  return {\n    isPressed,\n    buttonProps: mergeProps(additionalProps, buttonProps, {\n      \"aria-haspopup\": props[\"aria-haspopup\"],\n      \"aria-expanded\": props[\"aria-expanded\"],\n      \"aria-controls\": props[\"aria-controls\"],\n      \"aria-pressed\": props[\"aria-pressed\"],\n      onClick: (e) => {\n        if (deprecatedOnClick) {\n          deprecatedOnClick(e);\n        }\n      }\n    })\n  };\n}\nexport {\n  useAriaButton\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}