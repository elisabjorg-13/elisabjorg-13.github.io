{"ast":null,"code":"\"use client\";\n\n// src/use-avatar-group.ts\nimport _objectSpread from \"/Users/elisabjorg/Documents/elisabjorg-13/elisabjorg-13.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/elisabjorg/Documents/elisabjorg-13/elisabjorg-13.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"as\", \"ref\", \"max\", \"total\", \"size\", \"color\", \"radius\", \"children\", \"isBordered\", \"isDisabled\", \"isGrid\", \"renderCount\", \"className\"];\nimport { avatarGroup } from \"@nextui-org/theme\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { clsx, compact } from \"@nextui-org/shared-utils\";\nimport { getValidChildren } from \"@nextui-org/react-utils\";\nimport { cloneElement, useMemo } from \"react\";\nfunction useAvatarGroup() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var as = props.as,\n    ref = props.ref,\n    _props$max = props.max,\n    max = _props$max === void 0 ? 5 : _props$max,\n    total = props.total,\n    size = props.size,\n    color = props.color,\n    radius = props.radius,\n    children = props.children,\n    isBordered = props.isBordered,\n    isDisabled = props.isDisabled,\n    isGrid = props.isGrid,\n    renderCount = props.renderCount,\n    className = props.className,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var domRef = useDOMRef(ref);\n  var Component = as || \"div\";\n  var context = useMemo(function () {\n    return {\n      size: size,\n      color: color,\n      radius: radius,\n      isGrid: isGrid,\n      isBordered: isBordered,\n      isDisabled: isDisabled\n    };\n  }, [size, color, radius, isGrid, isBordered, isDisabled]);\n  var classNames = useMemo(function () {\n    return avatarGroup({\n      className: className,\n      isGrid: isGrid\n    });\n  }, [className, isGrid]);\n  var validChildren = getValidChildren(children);\n  var childrenWithinMax = max ? validChildren.slice(0, max) : validChildren;\n  var remainingCount = total ? total : max != null ? validChildren.length - max : -1;\n  var clones = childrenWithinMax.map(function (child, index) {\n    var isFirstAvatar = index === 0;\n    var isLastAvatar = index === childrenWithinMax.length - 1;\n    var childProps = {\n      className: clsx(isFirstAvatar ? \"ml-0\" : !isGrid ? \"-ml-2\" : \"\", isLastAvatar && remainingCount < 1 ? \"hover:-translate-x-0\" : \"\")\n    };\n    return cloneElement(child, compact(childProps));\n  });\n  var getAvatarGroupProps = function getAvatarGroupProps() {\n    return _objectSpread({\n      ref: domRef,\n      className: classNames,\n      role: \"group\"\n    }, otherProps);\n  };\n  return {\n    Component: Component,\n    context: context,\n    remainingCount: remainingCount,\n    clones: clones,\n    renderCount: renderCount,\n    getAvatarGroupProps: getAvatarGroupProps\n  };\n}\nexport { useAvatarGroup };","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","avatarGroup","useDOMRef","clsx","compact","getValidChildren","cloneElement","useMemo","useAvatarGroup","props","arguments","length","undefined","as","ref","_props$max","max","total","size","color","radius","children","isBordered","isDisabled","isGrid","renderCount","className","otherProps","domRef","Component","context","classNames","validChildren","childrenWithinMax","slice","remainingCount","clones","map","child","index","isFirstAvatar","isLastAvatar","childProps","getAvatarGroupProps","role"],"sources":["/Users/elisabjorg/Documents/elisabjorg-13/elisabjorg-13.github.io/node_modules/@nextui-org/avatar/dist/chunk-2XTCMOP6.mjs"],"sourcesContent":["\"use client\";\n\n// src/use-avatar-group.ts\nimport { avatarGroup } from \"@nextui-org/theme\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { clsx, compact } from \"@nextui-org/shared-utils\";\nimport { getValidChildren } from \"@nextui-org/react-utils\";\nimport { cloneElement, useMemo } from \"react\";\nfunction useAvatarGroup(props = {}) {\n  const {\n    as,\n    ref,\n    max = 5,\n    total,\n    size,\n    color,\n    radius,\n    children,\n    isBordered,\n    isDisabled,\n    isGrid,\n    renderCount,\n    className,\n    ...otherProps\n  } = props;\n  const domRef = useDOMRef(ref);\n  const Component = as || \"div\";\n  const context = useMemo(\n    () => ({\n      size,\n      color,\n      radius,\n      isGrid,\n      isBordered,\n      isDisabled\n    }),\n    [size, color, radius, isGrid, isBordered, isDisabled]\n  );\n  const classNames = useMemo(() => avatarGroup({ className, isGrid }), [className, isGrid]);\n  const validChildren = getValidChildren(children);\n  const childrenWithinMax = max ? validChildren.slice(0, max) : validChildren;\n  const remainingCount = total ? total : max != null ? validChildren.length - max : -1;\n  const clones = childrenWithinMax.map((child, index) => {\n    const isFirstAvatar = index === 0;\n    const isLastAvatar = index === childrenWithinMax.length - 1;\n    const childProps = {\n      className: clsx(\n        isFirstAvatar ? \"ml-0\" : !isGrid ? \"-ml-2\" : \"\",\n        isLastAvatar && remainingCount < 1 ? \"hover:-translate-x-0\" : \"\"\n      )\n    };\n    return cloneElement(child, compact(childProps));\n  });\n  const getAvatarGroupProps = () => {\n    return {\n      ref: domRef,\n      className: classNames,\n      role: \"group\",\n      ...otherProps\n    };\n  };\n  return {\n    Component,\n    context,\n    remainingCount,\n    clones,\n    renderCount,\n    getAvatarGroupProps\n  };\n}\n\nexport {\n  useAvatarGroup\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AAAA,OAAAA,aAAA;AAAA,OAAAC,wBAAA;AAAA,IAAAC,SAAA;AACA,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,IAAI,EAAEC,OAAO,QAAQ,0BAA0B;AACxD,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,YAAY,EAAEC,OAAO,QAAQ,OAAO;AAC7C,SAASC,cAAcA,CAAA,EAAa;EAAA,IAAZC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAChC,IACEG,EAAE,GAcAJ,KAAK,CAdPI,EAAE;IACFC,GAAG,GAaDL,KAAK,CAbPK,GAAG;IAAAC,UAAA,GAaDN,KAAK,CAZPO,GAAG;IAAHA,GAAG,GAAAD,UAAA,cAAG,CAAC,GAAAA,UAAA;IACPE,KAAK,GAWHR,KAAK,CAXPQ,KAAK;IACLC,IAAI,GAUFT,KAAK,CAVPS,IAAI;IACJC,KAAK,GASHV,KAAK,CATPU,KAAK;IACLC,MAAM,GAQJX,KAAK,CARPW,MAAM;IACNC,QAAQ,GAONZ,KAAK,CAPPY,QAAQ;IACRC,UAAU,GAMRb,KAAK,CANPa,UAAU;IACVC,UAAU,GAKRd,KAAK,CALPc,UAAU;IACVC,MAAM,GAIJf,KAAK,CAJPe,MAAM;IACNC,WAAW,GAGThB,KAAK,CAHPgB,WAAW;IACXC,SAAS,GAEPjB,KAAK,CAFPiB,SAAS;IACNC,UAAU,GAAA5B,wBAAA,CACXU,KAAK,EAAAT,SAAA;EACT,IAAM4B,MAAM,GAAG1B,SAAS,CAACY,GAAG,CAAC;EAC7B,IAAMe,SAAS,GAAGhB,EAAE,IAAI,KAAK;EAC7B,IAAMiB,OAAO,GAAGvB,OAAO,CACrB;IAAA,OAAO;MACLW,IAAI,EAAJA,IAAI;MACJC,KAAK,EAALA,KAAK;MACLC,MAAM,EAANA,MAAM;MACNI,MAAM,EAANA,MAAM;MACNF,UAAU,EAAVA,UAAU;MACVC,UAAU,EAAVA;IACF,CAAC;EAAA,CAAC,EACF,CAACL,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEI,MAAM,EAAEF,UAAU,EAAEC,UAAU,CACtD,CAAC;EACD,IAAMQ,UAAU,GAAGxB,OAAO,CAAC;IAAA,OAAMN,WAAW,CAAC;MAAEyB,SAAS,EAATA,SAAS;MAAEF,MAAM,EAANA;IAAO,CAAC,CAAC;EAAA,GAAE,CAACE,SAAS,EAAEF,MAAM,CAAC,CAAC;EACzF,IAAMQ,aAAa,GAAG3B,gBAAgB,CAACgB,QAAQ,CAAC;EAChD,IAAMY,iBAAiB,GAAGjB,GAAG,GAAGgB,aAAa,CAACE,KAAK,CAAC,CAAC,EAAElB,GAAG,CAAC,GAAGgB,aAAa;EAC3E,IAAMG,cAAc,GAAGlB,KAAK,GAAGA,KAAK,GAAGD,GAAG,IAAI,IAAI,GAAGgB,aAAa,CAACrB,MAAM,GAAGK,GAAG,GAAG,CAAC,CAAC;EACpF,IAAMoB,MAAM,GAAGH,iBAAiB,CAACI,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK,EAAK;IACrD,IAAMC,aAAa,GAAGD,KAAK,KAAK,CAAC;IACjC,IAAME,YAAY,GAAGF,KAAK,KAAKN,iBAAiB,CAACtB,MAAM,GAAG,CAAC;IAC3D,IAAM+B,UAAU,GAAG;MACjBhB,SAAS,EAAEvB,IAAI,CACbqC,aAAa,GAAG,MAAM,GAAG,CAAChB,MAAM,GAAG,OAAO,GAAG,EAAE,EAC/CiB,YAAY,IAAIN,cAAc,GAAG,CAAC,GAAG,sBAAsB,GAAG,EAChE;IACF,CAAC;IACD,OAAO7B,YAAY,CAACgC,KAAK,EAAElC,OAAO,CAACsC,UAAU,CAAC,CAAC;EACjD,CAAC,CAAC;EACF,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAChC,OAAA7C,aAAA;MACEgB,GAAG,EAAEc,MAAM;MACXF,SAAS,EAAEK,UAAU;MACrBa,IAAI,EAAE;IAAO,GACVjB,UAAU;EAEjB,CAAC;EACD,OAAO;IACLE,SAAS,EAATA,SAAS;IACTC,OAAO,EAAPA,OAAO;IACPK,cAAc,EAAdA,cAAc;IACdC,MAAM,EAANA,MAAM;IACNX,WAAW,EAAXA,WAAW;IACXkB,mBAAmB,EAAnBA;EACF,CAAC;AACH;AAEA,SACEnC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}