{"ast":null,"code":"import _toConsumableArray from \"/Users/elisabjorg/Documents/elisabjorg-13/elisabjorg-13.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/elisabjorg/Documents/elisabjorg-13/elisabjorg-13.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/elisabjorg/Documents/elisabjorg-13/elisabjorg-13.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"/Users/elisabjorg/Documents/elisabjorg-13/elisabjorg-13.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"children\", \"className\", \"classNames\", \"label\"];\n// src/use-spinner.ts\nimport { mapPropsVariants } from \"@nextui-org/system-rsc\";\nimport { spinner } from \"@nextui-org/theme\";\nimport { clsx } from \"@nextui-org/shared-utils\";\nimport { useMemo, useCallback } from \"react\";\nfunction useSpinner(originalProps) {\n  var _mapPropsVariants = mapPropsVariants(originalProps, spinner.variantKeys),\n    _mapPropsVariants2 = _slicedToArray(_mapPropsVariants, 2),\n    props = _mapPropsVariants2[0],\n    variantProps = _mapPropsVariants2[1];\n  var children = props.children,\n    className = props.className,\n    classNames = props.classNames,\n    labelProp = props.label,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var slots = useMemo(function () {\n    return spinner(_objectSpread({}, variantProps));\n  }, _toConsumableArray(Object.values(variantProps)));\n  var baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  var label = labelProp || children;\n  var ariaLabel = useMemo(function () {\n    if (label && typeof label === \"string\") {\n      return label;\n    }\n    return !otherProps[\"aria-label\"] ? \"Loading\" : \"\";\n  }, [children, label, otherProps[\"aria-label\"]]);\n  var getSpinnerProps = useCallback(function () {\n    return _objectSpread({\n      \"aria-label\": ariaLabel,\n      className: slots.base({\n        class: baseStyles\n      })\n    }, otherProps);\n  }, [ariaLabel, slots, baseStyles, otherProps]);\n  return {\n    label: label,\n    slots: slots,\n    classNames: classNames,\n    getSpinnerProps: getSpinnerProps\n  };\n}\nexport { useSpinner };","map":{"version":3,"names":["mapPropsVariants","spinner","clsx","useMemo","useCallback","useSpinner","originalProps","_mapPropsVariants","variantKeys","_mapPropsVariants2","_slicedToArray","props","variantProps","children","className","classNames","labelProp","label","otherProps","_objectWithoutProperties","_excluded","slots","_objectSpread","_toConsumableArray","Object","values","baseStyles","base","ariaLabel","getSpinnerProps","class"],"sources":["/Users/elisabjorg/Documents/elisabjorg-13/elisabjorg-13.github.io/node_modules/@nextui-org/spinner/dist/chunk-EQVUDELC.mjs"],"sourcesContent":["// src/use-spinner.ts\nimport { mapPropsVariants } from \"@nextui-org/system-rsc\";\nimport { spinner } from \"@nextui-org/theme\";\nimport { clsx } from \"@nextui-org/shared-utils\";\nimport { useMemo, useCallback } from \"react\";\nfunction useSpinner(originalProps) {\n  const [props, variantProps] = mapPropsVariants(originalProps, spinner.variantKeys);\n  const { children, className, classNames, label: labelProp, ...otherProps } = props;\n  const slots = useMemo(() => spinner({ ...variantProps }), [...Object.values(variantProps)]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const label = labelProp || children;\n  const ariaLabel = useMemo(() => {\n    if (label && typeof label === \"string\") {\n      return label;\n    }\n    return !otherProps[\"aria-label\"] ? \"Loading\" : \"\";\n  }, [children, label, otherProps[\"aria-label\"]]);\n  const getSpinnerProps = useCallback(\n    () => ({\n      \"aria-label\": ariaLabel,\n      className: slots.base({\n        class: baseStyles\n      }),\n      ...otherProps\n    }),\n    [ariaLabel, slots, baseStyles, otherProps]\n  );\n  return { label, slots, classNames, getSpinnerProps };\n}\n\nexport {\n  useSpinner\n};\n"],"mappings":";;;;;AAAA;AACA,SAASA,gBAAgB,QAAQ,wBAAwB;AACzD,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,IAAI,QAAQ,0BAA0B;AAC/C,SAASC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AAC5C,SAASC,UAAUA,CAACC,aAAa,EAAE;EACjC,IAAAC,iBAAA,GAA8BP,gBAAgB,CAACM,aAAa,EAAEL,OAAO,CAACO,WAAW,CAAC;IAAAC,kBAAA,GAAAC,cAAA,CAAAH,iBAAA;IAA3EI,KAAK,GAAAF,kBAAA;IAAEG,YAAY,GAAAH,kBAAA;EAC1B,IAAQI,QAAQ,GAA6DF,KAAK,CAA1EE,QAAQ;IAAEC,SAAS,GAAkDH,KAAK,CAAhEG,SAAS;IAAEC,UAAU,GAAsCJ,KAAK,CAArDI,UAAU;IAASC,SAAS,GAAoBL,KAAK,CAAzCM,KAAK;IAAgBC,UAAU,GAAAC,wBAAA,CAAKR,KAAK,EAAAS,SAAA;EAClF,IAAMC,KAAK,GAAGlB,OAAO,CAAC;IAAA,OAAMF,OAAO,CAAAqB,aAAA,KAAMV,YAAY,CAAE,CAAC;EAAA,GAAAW,kBAAA,CAAMC,MAAM,CAACC,MAAM,CAACb,YAAY,CAAC,CAAC,CAAC;EAC3F,IAAMc,UAAU,GAAGxB,IAAI,CAACa,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACY,IAAI,EAAEb,SAAS,CAAC;EACjF,IAAMG,KAAK,GAAGD,SAAS,IAAIH,QAAQ;EACnC,IAAMe,SAAS,GAAGzB,OAAO,CAAC,YAAM;IAC9B,IAAIc,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MACtC,OAAOA,KAAK;IACd;IACA,OAAO,CAACC,UAAU,CAAC,YAAY,CAAC,GAAG,SAAS,GAAG,EAAE;EACnD,CAAC,EAAE,CAACL,QAAQ,EAAEI,KAAK,EAAEC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;EAC/C,IAAMW,eAAe,GAAGzB,WAAW,CACjC;IAAA,OAAAkB,aAAA;MACE,YAAY,EAAEM,SAAS;MACvBd,SAAS,EAAEO,KAAK,CAACM,IAAI,CAAC;QACpBG,KAAK,EAAEJ;MACT,CAAC;IAAC,GACCR,UAAU;EAAA,CACb,EACF,CAACU,SAAS,EAAEP,KAAK,EAAEK,UAAU,EAAER,UAAU,CAC3C,CAAC;EACD,OAAO;IAAED,KAAK,EAALA,KAAK;IAAEI,KAAK,EAALA,KAAK;IAAEN,UAAU,EAAVA,UAAU;IAAEc,eAAe,EAAfA;EAAgB,CAAC;AACtD;AAEA,SACExB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}