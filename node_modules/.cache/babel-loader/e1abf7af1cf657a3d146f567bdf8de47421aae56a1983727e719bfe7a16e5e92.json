{"ast":null,"code":"\"use client\";\n\nimport { useReactAriaPopover } from \"./chunk-JGMU3RCI.mjs\";\n\n// src/use-popover.ts\nimport { useEffect } from \"react\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { useOverlayTriggerState } from \"@react-stately/overlays\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { ariaHideOutside, useOverlayTrigger } from \"@react-aria/overlays\";\nimport { mapPropsVariants } from \"@nextui-org/system\";\nimport { getArrowPlacement, getShouldUseAxisPlacement } from \"@nextui-org/aria-utils\";\nimport { popover } from \"@nextui-org/theme\";\nimport { mergeProps, mergeRefs } from \"@react-aria/utils\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { useMemo, useCallback, useRef } from \"react\";\nfunction usePopover(originalProps) {\n  var _a, _b;\n  const [props, variantProps] = mapPropsVariants(originalProps, popover.variantKeys);\n  const {\n    as,\n    children,\n    ref,\n    state: stateProp,\n    triggerRef: triggerRefProp,\n    scrollRef,\n    isOpen,\n    defaultOpen,\n    onOpenChange,\n    isNonModal = true,\n    shouldFlip = true,\n    containerPadding = 12,\n    shouldBlockScroll = false,\n    shouldCloseOnBlur,\n    portalContainer,\n    placement: placementProp = \"top\",\n    triggerType = \"dialog\",\n    showArrow = false,\n    offset = 7,\n    crossOffset = 0,\n    boundaryElement,\n    isKeyboardDismissDisabled,\n    shouldCloseOnInteractOutside,\n    motionProps,\n    className,\n    classNames,\n    onClose,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const domRef = useDOMRef(ref);\n  const domTriggerRef = useRef(null);\n  const triggerRef = triggerRefProp || domTriggerRef;\n  const disableAnimation = (_a = originalProps.disableAnimation) != null ? _a : false;\n  const innerState = useOverlayTriggerState({\n    isOpen,\n    defaultOpen,\n    onOpenChange: isOpen2 => {\n      onOpenChange == null ? void 0 : onOpenChange(isOpen2);\n      if (!isOpen2) {\n        onClose == null ? void 0 : onClose();\n      }\n    }\n  });\n  const state = stateProp || innerState;\n  const {\n    popoverProps,\n    underlayProps,\n    arrowProps,\n    placement: ariaPlacement\n  } = useReactAriaPopover({\n    triggerRef,\n    isNonModal,\n    popoverRef: domRef,\n    placement: placementProp,\n    offset,\n    scrollRef,\n    shouldCloseOnBlur,\n    boundaryElement,\n    crossOffset,\n    shouldFlip,\n    containerPadding,\n    isKeyboardDismissDisabled,\n    shouldCloseOnInteractOutside\n  }, state);\n  const {\n    triggerProps\n  } = useOverlayTrigger({\n    type: triggerType\n  }, state, triggerRef);\n  const {\n    isFocusVisible,\n    isFocused,\n    focusProps\n  } = useFocusRing();\n  const slots = useMemo(() => popover({\n    ...variantProps\n  }), [...Object.values(variantProps)]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const getPopoverProps = (props2 = {}) => ({\n    ref: domRef,\n    ...mergeProps(popoverProps, otherProps, props2),\n    style: mergeProps(popoverProps.style, otherProps.style, props2.style)\n  });\n  const getDialogProps = (props2 = {}) => ({\n    \"data-open\": dataAttr(state.isOpen),\n    \"data-focus\": dataAttr(isFocused),\n    \"data-focus-visible\": dataAttr(isFocusVisible),\n    \"data-placement\": getArrowPlacement(ariaPlacement, placementProp),\n    ...mergeProps(focusProps, props2),\n    className: slots.base({\n      class: clsx(baseStyles, props2.className)\n    }),\n    style: {\n      outline: \"none\"\n    }\n  });\n  const placement = useMemo(() => getShouldUseAxisPlacement(ariaPlacement, placementProp) ? ariaPlacement : placementProp, [ariaPlacement, placementProp]);\n  const getTriggerProps = useCallback((props2 = {}, _ref = null) => {\n    return {\n      \"aria-haspopup\": \"dialog\",\n      ...mergeProps(triggerProps, props2),\n      className: slots.trigger({\n        class: clsx(classNames == null ? void 0 : classNames.trigger, props2.className)\n      }),\n      ref: mergeRefs(_ref, triggerRef)\n    };\n  }, [isOpen, state, triggerProps, triggerRef]);\n  const getBackdropProps = useCallback((props2 = {}) => ({\n    className: slots.backdrop({\n      class: classNames == null ? void 0 : classNames.backdrop\n    }),\n    onClick: () => state.close(),\n    ...underlayProps,\n    ...props2\n  }), [slots, classNames, underlayProps]);\n  const getArrowProps = useCallback(() => ({\n    className: slots.arrow({\n      class: classNames == null ? void 0 : classNames.arrow\n    }),\n    \"data-placement\": getArrowPlacement(ariaPlacement, placementProp),\n    ...arrowProps\n  }), [arrowProps, ariaPlacement, placementProp, slots, classNames]);\n  useEffect(() => {\n    if (state.isOpen && (domRef == null ? void 0 : domRef.current)) {\n      return ariaHideOutside([domRef == null ? void 0 : domRef.current]);\n    }\n  }, [state.isOpen, domRef]);\n  return {\n    state,\n    Component,\n    children,\n    classNames,\n    showArrow,\n    triggerRef,\n    placement,\n    isNonModal,\n    popoverRef: domRef,\n    portalContainer,\n    isOpen: state.isOpen,\n    onClose: state.close,\n    disableAnimation,\n    shouldBlockScroll,\n    backdrop: (_b = originalProps.backdrop) != null ? _b : \"transparent\",\n    motionProps,\n    getBackdropProps,\n    getPopoverProps,\n    getTriggerProps,\n    getArrowProps,\n    getDialogProps\n  };\n}\nexport { usePopover };","map":{"version":3,"names":["useReactAriaPopover","useEffect","useDOMRef","useOverlayTriggerState","useFocusRing","ariaHideOutside","useOverlayTrigger","mapPropsVariants","getArrowPlacement","getShouldUseAxisPlacement","popover","mergeProps","mergeRefs","clsx","dataAttr","useMemo","useCallback","useRef","usePopover","originalProps","_a","_b","props","variantProps","variantKeys","as","children","ref","state","stateProp","triggerRef","triggerRefProp","scrollRef","isOpen","defaultOpen","onOpenChange","isNonModal","shouldFlip","containerPadding","shouldBlockScroll","shouldCloseOnBlur","portalContainer","placement","placementProp","triggerType","showArrow","offset","crossOffset","boundaryElement","isKeyboardDismissDisabled","shouldCloseOnInteractOutside","motionProps","className","classNames","onClose","otherProps","Component","domRef","domTriggerRef","disableAnimation","innerState","isOpen2","popoverProps","underlayProps","arrowProps","ariaPlacement","popoverRef","triggerProps","type","isFocusVisible","isFocused","focusProps","slots","Object","values","baseStyles","base","getPopoverProps","props2","style","getDialogProps","class","outline","getTriggerProps","_ref","trigger","getBackdropProps","backdrop","onClick","close","getArrowProps","arrow","current"],"sources":["/Users/elisabjorg/Documents/my-app/node_modules/@nextui-org/popover/dist/chunk-6WZQP7OD.mjs"],"sourcesContent":["\"use client\";\nimport {\n  useReactAriaPopover\n} from \"./chunk-JGMU3RCI.mjs\";\n\n// src/use-popover.ts\nimport { useEffect } from \"react\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { useOverlayTriggerState } from \"@react-stately/overlays\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { ariaHideOutside, useOverlayTrigger } from \"@react-aria/overlays\";\nimport { mapPropsVariants } from \"@nextui-org/system\";\nimport { getArrowPlacement, getShouldUseAxisPlacement } from \"@nextui-org/aria-utils\";\nimport { popover } from \"@nextui-org/theme\";\nimport { mergeProps, mergeRefs } from \"@react-aria/utils\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { useMemo, useCallback, useRef } from \"react\";\nfunction usePopover(originalProps) {\n  var _a, _b;\n  const [props, variantProps] = mapPropsVariants(originalProps, popover.variantKeys);\n  const {\n    as,\n    children,\n    ref,\n    state: stateProp,\n    triggerRef: triggerRefProp,\n    scrollRef,\n    isOpen,\n    defaultOpen,\n    onOpenChange,\n    isNonModal = true,\n    shouldFlip = true,\n    containerPadding = 12,\n    shouldBlockScroll = false,\n    shouldCloseOnBlur,\n    portalContainer,\n    placement: placementProp = \"top\",\n    triggerType = \"dialog\",\n    showArrow = false,\n    offset = 7,\n    crossOffset = 0,\n    boundaryElement,\n    isKeyboardDismissDisabled,\n    shouldCloseOnInteractOutside,\n    motionProps,\n    className,\n    classNames,\n    onClose,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const domRef = useDOMRef(ref);\n  const domTriggerRef = useRef(null);\n  const triggerRef = triggerRefProp || domTriggerRef;\n  const disableAnimation = (_a = originalProps.disableAnimation) != null ? _a : false;\n  const innerState = useOverlayTriggerState({\n    isOpen,\n    defaultOpen,\n    onOpenChange: (isOpen2) => {\n      onOpenChange == null ? void 0 : onOpenChange(isOpen2);\n      if (!isOpen2) {\n        onClose == null ? void 0 : onClose();\n      }\n    }\n  });\n  const state = stateProp || innerState;\n  const {\n    popoverProps,\n    underlayProps,\n    arrowProps,\n    placement: ariaPlacement\n  } = useReactAriaPopover(\n    {\n      triggerRef,\n      isNonModal,\n      popoverRef: domRef,\n      placement: placementProp,\n      offset,\n      scrollRef,\n      shouldCloseOnBlur,\n      boundaryElement,\n      crossOffset,\n      shouldFlip,\n      containerPadding,\n      isKeyboardDismissDisabled,\n      shouldCloseOnInteractOutside\n    },\n    state\n  );\n  const { triggerProps } = useOverlayTrigger({ type: triggerType }, state, triggerRef);\n  const { isFocusVisible, isFocused, focusProps } = useFocusRing();\n  const slots = useMemo(\n    () => popover({\n      ...variantProps\n    }),\n    [...Object.values(variantProps)]\n  );\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const getPopoverProps = (props2 = {}) => ({\n    ref: domRef,\n    ...mergeProps(popoverProps, otherProps, props2),\n    style: mergeProps(popoverProps.style, otherProps.style, props2.style)\n  });\n  const getDialogProps = (props2 = {}) => ({\n    \"data-open\": dataAttr(state.isOpen),\n    \"data-focus\": dataAttr(isFocused),\n    \"data-focus-visible\": dataAttr(isFocusVisible),\n    \"data-placement\": getArrowPlacement(ariaPlacement, placementProp),\n    ...mergeProps(focusProps, props2),\n    className: slots.base({ class: clsx(baseStyles, props2.className) }),\n    style: {\n      outline: \"none\"\n    }\n  });\n  const placement = useMemo(\n    () => getShouldUseAxisPlacement(ariaPlacement, placementProp) ? ariaPlacement : placementProp,\n    [ariaPlacement, placementProp]\n  );\n  const getTriggerProps = useCallback(\n    (props2 = {}, _ref = null) => {\n      return {\n        \"aria-haspopup\": \"dialog\",\n        ...mergeProps(triggerProps, props2),\n        className: slots.trigger({ class: clsx(classNames == null ? void 0 : classNames.trigger, props2.className) }),\n        ref: mergeRefs(_ref, triggerRef)\n      };\n    },\n    [isOpen, state, triggerProps, triggerRef]\n  );\n  const getBackdropProps = useCallback(\n    (props2 = {}) => ({\n      className: slots.backdrop({ class: classNames == null ? void 0 : classNames.backdrop }),\n      onClick: () => state.close(),\n      ...underlayProps,\n      ...props2\n    }),\n    [slots, classNames, underlayProps]\n  );\n  const getArrowProps = useCallback(\n    () => ({\n      className: slots.arrow({ class: classNames == null ? void 0 : classNames.arrow }),\n      \"data-placement\": getArrowPlacement(ariaPlacement, placementProp),\n      ...arrowProps\n    }),\n    [arrowProps, ariaPlacement, placementProp, slots, classNames]\n  );\n  useEffect(() => {\n    if (state.isOpen && (domRef == null ? void 0 : domRef.current)) {\n      return ariaHideOutside([domRef == null ? void 0 : domRef.current]);\n    }\n  }, [state.isOpen, domRef]);\n  return {\n    state,\n    Component,\n    children,\n    classNames,\n    showArrow,\n    triggerRef,\n    placement,\n    isNonModal,\n    popoverRef: domRef,\n    portalContainer,\n    isOpen: state.isOpen,\n    onClose: state.close,\n    disableAnimation,\n    shouldBlockScroll,\n    backdrop: (_b = originalProps.backdrop) != null ? _b : \"transparent\",\n    motionProps,\n    getBackdropProps,\n    getPopoverProps,\n    getTriggerProps,\n    getArrowProps,\n    getDialogProps\n  };\n}\n\nexport {\n  usePopover\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}