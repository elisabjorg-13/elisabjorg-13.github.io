{"ast":null,"code":"import _objectSpread from \"/Users/elisabjorg/Documents/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/elisabjorg/Documents/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/elisabjorg/Documents/my-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n/*\n* Copyright 2022 Adobe. All rights reserved.\n* This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License. You may obtain a copy\n* of the License at http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software distributed under\n* the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n* OF ANY KIND, either express or implied. See the License for the specific language\n* governing permissions and limitations under the License.\n*/\nvar $5b160d28a433310d$export$c17fa47878dc55b6 = /*#__PURE__*/function () {\n  function $5b160d28a433310d$export$c17fa47878dc55b6(messages) {\n    var defaultLocale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"en-US\";\n    _classCallCheck(this, $5b160d28a433310d$export$c17fa47878dc55b6);\n    // Clone messages so we don't modify the original object.\n    this.strings = _objectSpread({}, messages);\n    this.defaultLocale = defaultLocale;\n  }\n  _createClass($5b160d28a433310d$export$c17fa47878dc55b6, [{\n    key: \"getStringForLocale\",\n    value: /** Returns a localized string for the given key and locale. */function getStringForLocale(key, locale) {\n      var strings = this.strings[locale];\n      if (!strings) {\n        strings = $5b160d28a433310d$var$getStringsForLocale(locale, this.strings, this.defaultLocale);\n        this.strings[locale] = strings;\n      }\n      var string = strings[key];\n      if (!string) throw new Error(\"Could not find intl message \".concat(key, \" in \").concat(locale, \" locale\"));\n      return string;\n    }\n  }]);\n  return $5b160d28a433310d$export$c17fa47878dc55b6;\n}();\nfunction $5b160d28a433310d$var$getStringsForLocale(locale, strings) {\n  var defaultLocale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"en-US\";\n  // If there is an exact match, use it.\n  if (strings[locale]) return strings[locale];\n  // Attempt to find the closest match by language.\n  // For example, if the locale is fr-CA (French Canadian), but there is only\n  // an fr-FR (France) set of strings, use that.\n  // This could be replaced with Intl.LocaleMatcher once it is supported.\n  // https://github.com/tc39/proposal-intl-localematcher\n  var language = $5b160d28a433310d$var$getLanguage(locale);\n  if (strings[language]) return strings[language];\n  for (var key in strings) {\n    if (key.startsWith(language + \"-\")) return strings[key];\n  }\n  // Nothing close, use english.\n  return strings[defaultLocale];\n}\nfunction $5b160d28a433310d$var$getLanguage(locale) {\n  // @ts-ignore\n  if (Intl.Locale)\n    // @ts-ignore\n    return new Intl.Locale(locale).language;\n  return locale.split(\"-\")[0];\n}\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nvar $6db58dc88e78b024$var$pluralRulesCache = new Map();\nvar $6db58dc88e78b024$var$numberFormatCache = new Map();\nvar $6db58dc88e78b024$export$2f817fcdc4b89ae0 = /*#__PURE__*/function () {\n  function $6db58dc88e78b024$export$2f817fcdc4b89ae0(locale, strings) {\n    _classCallCheck(this, $6db58dc88e78b024$export$2f817fcdc4b89ae0);\n    this.locale = locale;\n    this.strings = strings;\n  }\n  _createClass($6db58dc88e78b024$export$2f817fcdc4b89ae0, [{\n    key: \"format\",\n    value: /** Formats a localized string for the given key with the provided variables. */function format(key, variables) {\n      var message = this.strings.getStringForLocale(key, this.locale);\n      return typeof message === \"function\" ? message(variables, this) : message;\n    }\n  }, {\n    key: \"plural\",\n    value: function plural(count, options) {\n      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"cardinal\";\n      var opt = options[\"=\" + count];\n      if (opt) return typeof opt === \"function\" ? opt() : opt;\n      var key = this.locale + \":\" + type;\n      var pluralRules = $6db58dc88e78b024$var$pluralRulesCache.get(key);\n      if (!pluralRules) {\n        pluralRules = new Intl.PluralRules(this.locale, {\n          type: type\n        });\n        $6db58dc88e78b024$var$pluralRulesCache.set(key, pluralRules);\n      }\n      var selected = pluralRules.select(count);\n      opt = options[selected] || options.other;\n      return typeof opt === \"function\" ? opt() : opt;\n    }\n  }, {\n    key: \"number\",\n    value: function number(value) {\n      var numberFormat = $6db58dc88e78b024$var$numberFormatCache.get(this.locale);\n      if (!numberFormat) {\n        numberFormat = new Intl.NumberFormat(this.locale);\n        $6db58dc88e78b024$var$numberFormatCache.set(this.locale, numberFormat);\n      }\n      return numberFormat.format(value);\n    }\n  }, {\n    key: \"select\",\n    value: function select(options, value) {\n      var opt = options[value] || options.other;\n      return typeof opt === \"function\" ? opt() : opt;\n    }\n  }]);\n  return $6db58dc88e78b024$export$2f817fcdc4b89ae0;\n}();\nexport { $5b160d28a433310d$export$c17fa47878dc55b6 as LocalizedStringDictionary, $6db58dc88e78b024$export$2f817fcdc4b89ae0 as LocalizedStringFormatter };","map":{"version":3,"names":["$5b160d28a433310d$export$c17fa47878dc55b6","messages","defaultLocale","arguments","length","undefined","_classCallCheck","strings","_objectSpread","_createClass","key","value","getStringForLocale","locale","$5b160d28a433310d$var$getStringsForLocale","string","Error","concat","language","$5b160d28a433310d$var$getLanguage","startsWith","Intl","Locale","split","$6db58dc88e78b024$var$pluralRulesCache","Map","$6db58dc88e78b024$var$numberFormatCache","$6db58dc88e78b024$export$2f817fcdc4b89ae0","format","variables","message","plural","count","options","type","opt","pluralRules","get","PluralRules","set","selected","select","other","number","numberFormat","NumberFormat"],"sources":["/Users/elisabjorg/Documents/my-app/node_modules/@internationalized/string/dist/packages/@internationalized/string/src/index.ts","/Users/elisabjorg/Documents/my-app/node_modules/@internationalized/string/dist/packages/@internationalized/string/src/LocalizedStringDictionary.ts","/Users/elisabjorg/Documents/my-app/node_modules/@internationalized/string/dist/packages/@internationalized/string/src/LocalizedStringFormatter.ts"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport type {Variables, LocalizedString} from './LocalizedStringFormatter';\nexport type {LocalizedStrings} from './LocalizedStringDictionary';\nexport {LocalizedStringDictionary} from './LocalizedStringDictionary';\nexport {LocalizedStringFormatter} from './LocalizedStringFormatter';\n","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport type {LocalizedString} from './LocalizedStringFormatter';\n\nexport type LocalizedStrings<K extends string, T extends LocalizedString> = {\n  [lang: string]: Record<K, T>\n};\n\n/**\n * Stores a mapping of localized strings. Can be used to find the\n * closest available string for a given locale.\n */\nexport class LocalizedStringDictionary<K extends string = string, T extends LocalizedString = string> {\n  private strings: LocalizedStrings<K, T>;\n  private defaultLocale: string;\n\n  constructor(messages: LocalizedStrings<K, T>, defaultLocale: string = 'en-US') {\n    // Clone messages so we don't modify the original object.\n    this.strings = {...messages};\n    this.defaultLocale = defaultLocale;\n  }\n\n  /** Returns a localized string for the given key and locale. */\n  getStringForLocale(key: K, locale: string): T {\n    let strings = this.strings[locale];\n    if (!strings) {\n      strings = getStringsForLocale(locale, this.strings, this.defaultLocale);\n      this.strings[locale] = strings;\n    }\n\n    let string = strings[key];\n    if (!string) {\n      throw new Error(`Could not find intl message ${key} in ${locale} locale`);\n    }\n\n    return string;\n  }\n}\n\nfunction getStringsForLocale<K extends string, T extends LocalizedString>(locale: string, strings: LocalizedStrings<K, T>, defaultLocale = 'en-US') {\n  // If there is an exact match, use it.\n  if (strings[locale]) {\n    return strings[locale];\n  }\n\n  // Attempt to find the closest match by language.\n  // For example, if the locale is fr-CA (French Canadian), but there is only\n  // an fr-FR (France) set of strings, use that.\n  // This could be replaced with Intl.LocaleMatcher once it is supported.\n  // https://github.com/tc39/proposal-intl-localematcher\n  let language = getLanguage(locale);\n  if (strings[language]) {\n    return strings[language];\n  }\n\n  for (let key in strings) {\n    if (key.startsWith(language + '-')) {\n      return strings[key];\n    }\n  }\n\n  // Nothing close, use english.\n  return strings[defaultLocale];\n}\n\nfunction getLanguage(locale: string) {\n  // @ts-ignore\n  if (Intl.Locale) {\n    // @ts-ignore\n    return new Intl.Locale(locale).language;\n  }\n\n  return locale.split('-')[0];\n}\n","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport type {LocalizedStringDictionary} from './LocalizedStringDictionary';\n\nexport type Variables = Record<string, string | number | boolean> | undefined;\nexport type LocalizedString = string | ((args: Variables, formatter?: LocalizedStringFormatter<any, any>) => string);\ntype InternalString = string | (() => string);\n\nconst pluralRulesCache = new Map<string, Intl.PluralRules>();\nconst numberFormatCache = new Map<string, Intl.NumberFormat>();\n\n/**\n * Formats localized strings from a LocalizedStringDictionary. Supports interpolating variables,\n * selecting the correct pluralization, and formatting numbers for the locale.\n */\nexport class LocalizedStringFormatter<K extends string = string, T extends LocalizedString = string> {\n  private locale: string;\n  private strings: LocalizedStringDictionary<K, T>;\n\n  constructor(locale: string, strings: LocalizedStringDictionary<K, T>) {\n    this.locale = locale;\n    this.strings = strings;\n  }\n\n  /** Formats a localized string for the given key with the provided variables. */\n  format(key: K, variables?: Variables): string {\n    let message = this.strings.getStringForLocale(key, this.locale);\n    return typeof message === 'function' ? message(variables, this) : message;\n  }\n\n  protected plural(count: number, options: Record<string, InternalString>, type: Intl.PluralRuleType = 'cardinal') {\n    let opt = options['=' + count];\n    if (opt) {\n      return typeof opt === 'function' ? opt() : opt;\n    }\n\n    let key = this.locale + ':' + type;\n    let pluralRules = pluralRulesCache.get(key);\n    if (!pluralRules) {\n      pluralRules = new Intl.PluralRules(this.locale, {type});\n      pluralRulesCache.set(key, pluralRules);\n    }\n\n    let selected = pluralRules.select(count);\n    opt = options[selected] || options.other;\n    return typeof opt === 'function' ? opt() : opt;\n  }\n\n  protected number(value: number) {\n    let numberFormat = numberFormatCache.get(this.locale);\n    if (!numberFormat) {\n      numberFormat = new Intl.NumberFormat(this.locale);\n      numberFormatCache.set(this.locale, numberFormat);\n    }\n    return numberFormat.format(value);\n  }\n\n  protected select(options: Record<string, InternalString>, value: string) {\n    let opt = options[value] || options.other;\n    return typeof opt === 'function' ? opt() : opt;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}