{"ast":null,"code":"\"use client\";\n\n// src/use-menu-item.ts\nimport { useMemo, useRef, useCallback } from \"react\";\nimport { menuItem } from \"@nextui-org/theme\";\nimport { mapPropsVariants } from \"@nextui-org/system\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { filterDOMProps } from \"@nextui-org/react-utils\";\nimport { clsx, dataAttr, removeEvents } from \"@nextui-org/shared-utils\";\nimport { useMenuItem as useAriaMenuItem } from \"@react-aria/menu\";\nimport { chain, mergeProps } from \"@react-aria/utils\";\nimport { useHover, usePress } from \"@react-aria/interactions\";\nimport { useIsMobile } from \"@nextui-org/use-is-mobile\";\nfunction useMenuItem(originalProps) {\n  const [props, variantProps] = mapPropsVariants(originalProps, menuItem.variantKeys);\n  const {\n    as,\n    item,\n    state,\n    shortcut,\n    description,\n    startContent,\n    endContent,\n    isVirtualized,\n    selectedIcon,\n    className,\n    classNames,\n    onAction,\n    autoFocus,\n    onPress,\n    onClick,\n    isReadOnly = false,\n    closeOnSelect,\n    onClose,\n    ...otherProps\n  } = props;\n  const disableAnimation = originalProps.disableAnimation;\n  const domRef = useRef(null);\n  const Component = as || \"li\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const {\n    rendered,\n    key\n  } = item;\n  const isDisabled = state.disabledKeys.has(key) || originalProps.isDisabled;\n  const isSelectable = state.selectionManager.selectionMode !== \"none\";\n  const isMobile = useIsMobile();\n  const {\n    pressProps,\n    isPressed\n  } = usePress({\n    ref: domRef,\n    isDisabled,\n    onPress\n  });\n  const {\n    isHovered,\n    hoverProps\n  } = useHover({\n    isDisabled\n  });\n  const {\n    isFocusVisible,\n    focusProps\n  } = useFocusRing({\n    autoFocus\n  });\n  const {\n    isFocused,\n    isSelected,\n    menuItemProps,\n    labelProps,\n    descriptionProps,\n    keyboardShortcutProps\n  } = useAriaMenuItem({\n    key,\n    onClose,\n    isDisabled,\n    \"aria-label\": props[\"aria-label\"],\n    closeOnSelect,\n    isVirtualized,\n    onAction\n  }, state, domRef);\n  let itemProps = menuItemProps;\n  const slots = useMemo(() => menuItem({\n    ...variantProps,\n    isDisabled,\n    disableAnimation\n  }), [...Object.values(variantProps), isDisabled, disableAnimation]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  if (isReadOnly) {\n    itemProps = removeEvents(itemProps);\n  }\n  const getItemProps = (props2 = {}) => ({\n    ref: domRef,\n    ...mergeProps(itemProps, isReadOnly ? {} : mergeProps(focusProps, pressProps), hoverProps, filterDOMProps(otherProps, {\n      enabled: shouldFilterDOMProps\n    }), props2),\n    \"data-focus\": dataAttr(isFocused),\n    \"data-selectable\": dataAttr(isSelectable),\n    \"data-hover\": dataAttr(isMobile ? isHovered || isPressed : isHovered),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-selected\": dataAttr(isSelected),\n    \"data-pressed\": dataAttr(isPressed),\n    \"data-focus-visible\": dataAttr(isFocusVisible),\n    className: slots.base({\n      class: clsx(baseStyles, props2.className)\n    }),\n    onClick: chain(pressProps.onClick, onClick)\n  });\n  const getLabelProps = (props2 = {}) => ({\n    ...mergeProps(labelProps, props2),\n    className: slots.title({\n      class: classNames == null ? void 0 : classNames.title\n    })\n  });\n  const getDescriptionProps = (props2 = {}) => ({\n    ...mergeProps(descriptionProps, props2),\n    className: slots.description({\n      class: classNames == null ? void 0 : classNames.description\n    })\n  });\n  const getKeyboardShortcutProps = (props2 = {}) => ({\n    ...mergeProps(keyboardShortcutProps, props2),\n    className: slots.shortcut({\n      class: classNames == null ? void 0 : classNames.shortcut\n    })\n  });\n  const getSelectedIconProps = useCallback((props2 = {}) => {\n    return {\n      \"aria-hidden\": dataAttr(true),\n      \"data-disabled\": dataAttr(isDisabled),\n      className: slots.selectedIcon({\n        class: classNames == null ? void 0 : classNames.selectedIcon\n      }),\n      ...props2\n    };\n  }, [isDisabled, slots, classNames]);\n  return {\n    Component,\n    domRef,\n    slots,\n    classNames,\n    isSelectable,\n    isSelected,\n    isDisabled,\n    rendered,\n    shortcut,\n    description,\n    startContent,\n    endContent,\n    selectedIcon,\n    disableAnimation,\n    getItemProps,\n    getLabelProps,\n    getDescriptionProps,\n    getKeyboardShortcutProps,\n    getSelectedIconProps\n  };\n}\nexport { useMenuItem };","map":{"version":3,"names":["useMemo","useRef","useCallback","menuItem","mapPropsVariants","useFocusRing","filterDOMProps","clsx","dataAttr","removeEvents","useMenuItem","useAriaMenuItem","chain","mergeProps","useHover","usePress","useIsMobile","originalProps","props","variantProps","variantKeys","as","item","state","shortcut","description","startContent","endContent","isVirtualized","selectedIcon","className","classNames","onAction","autoFocus","onPress","onClick","isReadOnly","closeOnSelect","onClose","otherProps","disableAnimation","domRef","Component","shouldFilterDOMProps","rendered","key","isDisabled","disabledKeys","has","isSelectable","selectionManager","selectionMode","isMobile","pressProps","isPressed","ref","isHovered","hoverProps","isFocusVisible","focusProps","isFocused","isSelected","menuItemProps","labelProps","descriptionProps","keyboardShortcutProps","itemProps","slots","Object","values","baseStyles","base","getItemProps","props2","enabled","class","getLabelProps","title","getDescriptionProps","getKeyboardShortcutProps","getSelectedIconProps"],"sources":["/Users/elisabjorg/Documents/elisabjorg-13/elisabjorg-13.github.io/node_modules/@nextui-org/menu/dist/chunk-RPQATZUH.mjs"],"sourcesContent":["\"use client\";\n\n// src/use-menu-item.ts\nimport { useMemo, useRef, useCallback } from \"react\";\nimport { menuItem } from \"@nextui-org/theme\";\nimport { mapPropsVariants } from \"@nextui-org/system\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { filterDOMProps } from \"@nextui-org/react-utils\";\nimport { clsx, dataAttr, removeEvents } from \"@nextui-org/shared-utils\";\nimport { useMenuItem as useAriaMenuItem } from \"@react-aria/menu\";\nimport { chain, mergeProps } from \"@react-aria/utils\";\nimport { useHover, usePress } from \"@react-aria/interactions\";\nimport { useIsMobile } from \"@nextui-org/use-is-mobile\";\nfunction useMenuItem(originalProps) {\n  const [props, variantProps] = mapPropsVariants(originalProps, menuItem.variantKeys);\n  const {\n    as,\n    item,\n    state,\n    shortcut,\n    description,\n    startContent,\n    endContent,\n    isVirtualized,\n    selectedIcon,\n    className,\n    classNames,\n    onAction,\n    autoFocus,\n    onPress,\n    onClick,\n    isReadOnly = false,\n    closeOnSelect,\n    onClose,\n    ...otherProps\n  } = props;\n  const disableAnimation = originalProps.disableAnimation;\n  const domRef = useRef(null);\n  const Component = as || \"li\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const { rendered, key } = item;\n  const isDisabled = state.disabledKeys.has(key) || originalProps.isDisabled;\n  const isSelectable = state.selectionManager.selectionMode !== \"none\";\n  const isMobile = useIsMobile();\n  const { pressProps, isPressed } = usePress({\n    ref: domRef,\n    isDisabled,\n    onPress\n  });\n  const { isHovered, hoverProps } = useHover({\n    isDisabled\n  });\n  const { isFocusVisible, focusProps } = useFocusRing({\n    autoFocus\n  });\n  const {\n    isFocused,\n    isSelected,\n    menuItemProps,\n    labelProps,\n    descriptionProps,\n    keyboardShortcutProps\n  } = useAriaMenuItem(\n    {\n      key,\n      onClose,\n      isDisabled,\n      \"aria-label\": props[\"aria-label\"],\n      closeOnSelect,\n      isVirtualized,\n      onAction\n    },\n    state,\n    domRef\n  );\n  let itemProps = menuItemProps;\n  const slots = useMemo(\n    () => menuItem({\n      ...variantProps,\n      isDisabled,\n      disableAnimation\n    }),\n    [...Object.values(variantProps), isDisabled, disableAnimation]\n  );\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  if (isReadOnly) {\n    itemProps = removeEvents(itemProps);\n  }\n  const getItemProps = (props2 = {}) => ({\n    ref: domRef,\n    ...mergeProps(\n      itemProps,\n      isReadOnly ? {} : mergeProps(focusProps, pressProps),\n      hoverProps,\n      filterDOMProps(otherProps, {\n        enabled: shouldFilterDOMProps\n      }),\n      props2\n    ),\n    \"data-focus\": dataAttr(isFocused),\n    \"data-selectable\": dataAttr(isSelectable),\n    \"data-hover\": dataAttr(isMobile ? isHovered || isPressed : isHovered),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-selected\": dataAttr(isSelected),\n    \"data-pressed\": dataAttr(isPressed),\n    \"data-focus-visible\": dataAttr(isFocusVisible),\n    className: slots.base({ class: clsx(baseStyles, props2.className) }),\n    onClick: chain(pressProps.onClick, onClick)\n  });\n  const getLabelProps = (props2 = {}) => ({\n    ...mergeProps(labelProps, props2),\n    className: slots.title({ class: classNames == null ? void 0 : classNames.title })\n  });\n  const getDescriptionProps = (props2 = {}) => ({\n    ...mergeProps(descriptionProps, props2),\n    className: slots.description({ class: classNames == null ? void 0 : classNames.description })\n  });\n  const getKeyboardShortcutProps = (props2 = {}) => ({\n    ...mergeProps(keyboardShortcutProps, props2),\n    className: slots.shortcut({ class: classNames == null ? void 0 : classNames.shortcut })\n  });\n  const getSelectedIconProps = useCallback(\n    (props2 = {}) => {\n      return {\n        \"aria-hidden\": dataAttr(true),\n        \"data-disabled\": dataAttr(isDisabled),\n        className: slots.selectedIcon({ class: classNames == null ? void 0 : classNames.selectedIcon }),\n        ...props2\n      };\n    },\n    [isDisabled, slots, classNames]\n  );\n  return {\n    Component,\n    domRef,\n    slots,\n    classNames,\n    isSelectable,\n    isSelected,\n    isDisabled,\n    rendered,\n    shortcut,\n    description,\n    startContent,\n    endContent,\n    selectedIcon,\n    disableAnimation,\n    getItemProps,\n    getLabelProps,\n    getDescriptionProps,\n    getKeyboardShortcutProps,\n    getSelectedIconProps\n  };\n}\n\nexport {\n  useMenuItem\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA,SAASA,OAAO,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACpD,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,0BAA0B;AACvE,SAASC,WAAW,IAAIC,eAAe,QAAQ,kBAAkB;AACjE,SAASC,KAAK,EAAEC,UAAU,QAAQ,mBAAmB;AACrD,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,0BAA0B;AAC7D,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASN,WAAWA,CAACO,aAAa,EAAE;EAClC,MAAM,CAACC,KAAK,EAAEC,YAAY,CAAC,GAAGf,gBAAgB,CAACa,aAAa,EAAEd,QAAQ,CAACiB,WAAW,CAAC;EACnF,MAAM;IACJC,EAAE;IACFC,IAAI;IACJC,KAAK;IACLC,QAAQ;IACRC,WAAW;IACXC,YAAY;IACZC,UAAU;IACVC,aAAa;IACbC,YAAY;IACZC,SAAS;IACTC,UAAU;IACVC,QAAQ;IACRC,SAAS;IACTC,OAAO;IACPC,OAAO;IACPC,UAAU,GAAG,KAAK;IAClBC,aAAa;IACbC,OAAO;IACP,GAAGC;EACL,CAAC,GAAGrB,KAAK;EACT,MAAMsB,gBAAgB,GAAGvB,aAAa,CAACuB,gBAAgB;EACvD,MAAMC,MAAM,GAAGxC,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMyC,SAAS,GAAGrB,EAAE,IAAI,IAAI;EAC5B,MAAMsB,oBAAoB,GAAG,OAAOD,SAAS,KAAK,QAAQ;EAC1D,MAAM;IAAEE,QAAQ;IAAEC;EAAI,CAAC,GAAGvB,IAAI;EAC9B,MAAMwB,UAAU,GAAGvB,KAAK,CAACwB,YAAY,CAACC,GAAG,CAACH,GAAG,CAAC,IAAI5B,aAAa,CAAC6B,UAAU;EAC1E,MAAMG,YAAY,GAAG1B,KAAK,CAAC2B,gBAAgB,CAACC,aAAa,KAAK,MAAM;EACpE,MAAMC,QAAQ,GAAGpC,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEqC,UAAU;IAAEC;EAAU,CAAC,GAAGvC,QAAQ,CAAC;IACzCwC,GAAG,EAAEd,MAAM;IACXK,UAAU;IACVZ;EACF,CAAC,CAAC;EACF,MAAM;IAAEsB,SAAS;IAAEC;EAAW,CAAC,GAAG3C,QAAQ,CAAC;IACzCgC;EACF,CAAC,CAAC;EACF,MAAM;IAAEY,cAAc;IAAEC;EAAW,CAAC,GAAGtD,YAAY,CAAC;IAClD4B;EACF,CAAC,CAAC;EACF,MAAM;IACJ2B,SAAS;IACTC,UAAU;IACVC,aAAa;IACbC,UAAU;IACVC,gBAAgB;IAChBC;EACF,CAAC,GAAGtD,eAAe,CACjB;IACEkC,GAAG;IACHP,OAAO;IACPQ,UAAU;IACV,YAAY,EAAE5B,KAAK,CAAC,YAAY,CAAC;IACjCmB,aAAa;IACbT,aAAa;IACbI;EACF,CAAC,EACDT,KAAK,EACLkB,MACF,CAAC;EACD,IAAIyB,SAAS,GAAGJ,aAAa;EAC7B,MAAMK,KAAK,GAAGnE,OAAO,CACnB,MAAMG,QAAQ,CAAC;IACb,GAAGgB,YAAY;IACf2B,UAAU;IACVN;EACF,CAAC,CAAC,EACF,CAAC,GAAG4B,MAAM,CAACC,MAAM,CAAClD,YAAY,CAAC,EAAE2B,UAAU,EAAEN,gBAAgB,CAC/D,CAAC;EACD,MAAM8B,UAAU,GAAG/D,IAAI,CAACwB,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACwC,IAAI,EAAEzC,SAAS,CAAC;EACjF,IAAIM,UAAU,EAAE;IACd8B,SAAS,GAAGzD,YAAY,CAACyD,SAAS,CAAC;EACrC;EACA,MAAMM,YAAY,GAAGA,CAACC,MAAM,GAAG,CAAC,CAAC,MAAM;IACrClB,GAAG,EAAEd,MAAM;IACX,GAAG5B,UAAU,CACXqD,SAAS,EACT9B,UAAU,GAAG,CAAC,CAAC,GAAGvB,UAAU,CAAC8C,UAAU,EAAEN,UAAU,CAAC,EACpDI,UAAU,EACVnD,cAAc,CAACiC,UAAU,EAAE;MACzBmC,OAAO,EAAE/B;IACX,CAAC,CAAC,EACF8B,MACF,CAAC;IACD,YAAY,EAAEjE,QAAQ,CAACoD,SAAS,CAAC;IACjC,iBAAiB,EAAEpD,QAAQ,CAACyC,YAAY,CAAC;IACzC,YAAY,EAAEzC,QAAQ,CAAC4C,QAAQ,GAAGI,SAAS,IAAIF,SAAS,GAAGE,SAAS,CAAC;IACrE,eAAe,EAAEhD,QAAQ,CAACsC,UAAU,CAAC;IACrC,eAAe,EAAEtC,QAAQ,CAACqD,UAAU,CAAC;IACrC,cAAc,EAAErD,QAAQ,CAAC8C,SAAS,CAAC;IACnC,oBAAoB,EAAE9C,QAAQ,CAACkD,cAAc,CAAC;IAC9C5B,SAAS,EAAEqC,KAAK,CAACI,IAAI,CAAC;MAAEI,KAAK,EAAEpE,IAAI,CAAC+D,UAAU,EAAEG,MAAM,CAAC3C,SAAS;IAAE,CAAC,CAAC;IACpEK,OAAO,EAAEvB,KAAK,CAACyC,UAAU,CAAClB,OAAO,EAAEA,OAAO;EAC5C,CAAC,CAAC;EACF,MAAMyC,aAAa,GAAGA,CAACH,MAAM,GAAG,CAAC,CAAC,MAAM;IACtC,GAAG5D,UAAU,CAACkD,UAAU,EAAEU,MAAM,CAAC;IACjC3C,SAAS,EAAEqC,KAAK,CAACU,KAAK,CAAC;MAAEF,KAAK,EAAE5C,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAAC8C;IAAM,CAAC;EAClF,CAAC,CAAC;EACF,MAAMC,mBAAmB,GAAGA,CAACL,MAAM,GAAG,CAAC,CAAC,MAAM;IAC5C,GAAG5D,UAAU,CAACmD,gBAAgB,EAAES,MAAM,CAAC;IACvC3C,SAAS,EAAEqC,KAAK,CAAC1C,WAAW,CAAC;MAAEkD,KAAK,EAAE5C,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACN;IAAY,CAAC;EAC9F,CAAC,CAAC;EACF,MAAMsD,wBAAwB,GAAGA,CAACN,MAAM,GAAG,CAAC,CAAC,MAAM;IACjD,GAAG5D,UAAU,CAACoD,qBAAqB,EAAEQ,MAAM,CAAC;IAC5C3C,SAAS,EAAEqC,KAAK,CAAC3C,QAAQ,CAAC;MAAEmD,KAAK,EAAE5C,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACP;IAAS,CAAC;EACxF,CAAC,CAAC;EACF,MAAMwD,oBAAoB,GAAG9E,WAAW,CACtC,CAACuE,MAAM,GAAG,CAAC,CAAC,KAAK;IACf,OAAO;MACL,aAAa,EAAEjE,QAAQ,CAAC,IAAI,CAAC;MAC7B,eAAe,EAAEA,QAAQ,CAACsC,UAAU,CAAC;MACrChB,SAAS,EAAEqC,KAAK,CAACtC,YAAY,CAAC;QAAE8C,KAAK,EAAE5C,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACF;MAAa,CAAC,CAAC;MAC/F,GAAG4C;IACL,CAAC;EACH,CAAC,EACD,CAAC3B,UAAU,EAAEqB,KAAK,EAAEpC,UAAU,CAChC,CAAC;EACD,OAAO;IACLW,SAAS;IACTD,MAAM;IACN0B,KAAK;IACLpC,UAAU;IACVkB,YAAY;IACZY,UAAU;IACVf,UAAU;IACVF,QAAQ;IACRpB,QAAQ;IACRC,WAAW;IACXC,YAAY;IACZC,UAAU;IACVE,YAAY;IACZW,gBAAgB;IAChBgC,YAAY;IACZI,aAAa;IACbE,mBAAmB;IACnBC,wBAAwB;IACxBC;EACF,CAAC;AACH;AAEA,SACEtE,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}