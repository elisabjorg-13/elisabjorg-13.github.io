{"ast":null,"code":"\"use client\";\n\n// src/use-tooltip.ts\nimport { useId, useImperativeHandle } from \"react\";\nimport { useTooltipTriggerState } from \"@react-stately/tooltip\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useTooltip as useReactAriaTooltip, useTooltipTrigger } from \"@react-aria/tooltip\";\nimport { useOverlayPosition, useOverlay } from \"@react-aria/overlays\";\nimport { mapPropsVariants } from \"@nextui-org/system\";\nimport { popover } from \"@nextui-org/theme\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { mergeRefs } from \"@nextui-org/react-utils\";\nimport { createDOMRef } from \"@nextui-org/react-utils\";\nimport { useMemo, useRef, useCallback } from \"react\";\nimport { toReactAriaPlacement, getArrowPlacement } from \"@nextui-org/aria-utils\";\nfunction useTooltip(originalProps) {\n  const [props, variantProps] = mapPropsVariants(originalProps, popover.variantKeys);\n  const {\n    ref,\n    as,\n    isOpen: isOpenProp,\n    content,\n    children,\n    defaultOpen,\n    onOpenChange,\n    isDisabled,\n    trigger: triggerAction,\n    shouldFlip = true,\n    containerPadding = 12,\n    placement: placementProp = \"top\",\n    delay = 0,\n    closeDelay = 500,\n    showArrow = false,\n    offset = 7,\n    crossOffset = 0,\n    isDismissable,\n    shouldCloseOnBlur = true,\n    portalContainer,\n    isKeyboardDismissDisabled = false,\n    shouldCloseOnInteractOutside,\n    className,\n    onClose,\n    motionProps,\n    classNames,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const state = useTooltipTriggerState({\n    delay,\n    closeDelay,\n    isDisabled,\n    defaultOpen,\n    isOpen: isOpenProp,\n    onOpenChange: isOpen2 => {\n      onOpenChange == null ? void 0 : onOpenChange(isOpen2);\n      if (!isOpen2) {\n        onClose == null ? void 0 : onClose();\n      }\n    }\n  });\n  const triggerRef = useRef(null);\n  const overlayRef = useRef(null);\n  const tooltipId = useId();\n  const isOpen = state.isOpen && !isDisabled;\n  useImperativeHandle(ref, () => createDOMRef(overlayRef));\n  const {\n    triggerProps,\n    tooltipProps: triggerTooltipProps\n  } = useTooltipTrigger({\n    isDisabled,\n    trigger: triggerAction\n  }, state, triggerRef);\n  const {\n    tooltipProps\n  } = useReactAriaTooltip({\n    isOpen,\n    ...mergeProps(props, triggerTooltipProps)\n  }, state);\n  const {\n    overlayProps: positionProps,\n    arrowProps,\n    placement\n  } = useOverlayPosition({\n    isOpen,\n    targetRef: triggerRef,\n    placement: toReactAriaPlacement(placementProp),\n    overlayRef,\n    offset: showArrow ? offset + 3 : offset,\n    crossOffset,\n    shouldFlip,\n    containerPadding\n  });\n  const {\n    overlayProps\n  } = useOverlay({\n    isOpen,\n    onClose: state.close,\n    isDismissable,\n    shouldCloseOnBlur,\n    isKeyboardDismissDisabled,\n    shouldCloseOnInteractOutside\n  }, overlayRef);\n  const slots = useMemo(() => {\n    var _a, _b, _c;\n    return popover({\n      ...variantProps,\n      radius: (_a = originalProps == null ? void 0 : originalProps.radius) != null ? _a : \"md\",\n      size: (_b = originalProps == null ? void 0 : originalProps.size) != null ? _b : \"md\",\n      shadow: (_c = originalProps == null ? void 0 : originalProps.shadow) != null ? _c : \"sm\"\n    });\n  }, [...Object.values(variantProps), originalProps == null ? void 0 : originalProps.radius, originalProps == null ? void 0 : originalProps.size, originalProps == null ? void 0 : originalProps.shadow]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const getTriggerProps = useCallback((props2 = {}, _ref = null) => ({\n    ...mergeProps(triggerProps, props2),\n    ref: mergeRefs(_ref, triggerRef),\n    \"aria-describedby\": isOpen ? tooltipId : void 0\n  }), [triggerProps, isOpen, tooltipId, state]);\n  const getTooltipProps = useCallback(() => ({\n    ref: overlayRef,\n    \"data-open\": dataAttr(isOpen),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-placement\": getArrowPlacement(placement, placementProp),\n    className: slots.base({\n      class: baseStyles\n    }),\n    ...mergeProps(tooltipProps, overlayProps, otherProps),\n    style: mergeProps(positionProps.style, otherProps.style, props.style),\n    id: tooltipId\n  }), [baseStyles, overlayProps, otherProps, overlayRef, positionProps, slots, tooltipId, tooltipProps]);\n  const getArrowProps = useCallback(() => ({\n    className: slots.arrow({\n      class: classNames == null ? void 0 : classNames.arrow\n    }),\n    \"data-placement\": getArrowPlacement(placement, placementProp),\n    ...arrowProps\n  }), [arrowProps, placement, placementProp, slots, classNames]);\n  return {\n    Component,\n    content,\n    children,\n    isOpen,\n    triggerRef,\n    showArrow,\n    portalContainer,\n    placement: placementProp,\n    disableAnimation: originalProps == null ? void 0 : originalProps.disableAnimation,\n    isDisabled,\n    motionProps,\n    getTriggerProps,\n    getTooltipProps,\n    getArrowProps\n  };\n}\nexport { useTooltip };","map":{"version":3,"names":["useId","useImperativeHandle","useTooltipTriggerState","mergeProps","useTooltip","useReactAriaTooltip","useTooltipTrigger","useOverlayPosition","useOverlay","mapPropsVariants","popover","clsx","dataAttr","mergeRefs","createDOMRef","useMemo","useRef","useCallback","toReactAriaPlacement","getArrowPlacement","originalProps","props","variantProps","variantKeys","ref","as","isOpen","isOpenProp","content","children","defaultOpen","onOpenChange","isDisabled","trigger","triggerAction","shouldFlip","containerPadding","placement","placementProp","delay","closeDelay","showArrow","offset","crossOffset","isDismissable","shouldCloseOnBlur","portalContainer","isKeyboardDismissDisabled","shouldCloseOnInteractOutside","className","onClose","motionProps","classNames","otherProps","Component","state","isOpen2","triggerRef","overlayRef","tooltipId","triggerProps","tooltipProps","triggerTooltipProps","overlayProps","positionProps","arrowProps","targetRef","close","slots","_a","_b","_c","radius","size","shadow","Object","values","baseStyles","base","getTriggerProps","props2","_ref","getTooltipProps","class","style","id","getArrowProps","arrow","disableAnimation"],"sources":["/Users/elisabjorg/Documents/my-app/node_modules/@nextui-org/tooltip/dist/chunk-62U42LRQ.mjs"],"sourcesContent":["\"use client\";\n\n// src/use-tooltip.ts\nimport { useId, useImperativeHandle } from \"react\";\nimport { useTooltipTriggerState } from \"@react-stately/tooltip\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useTooltip as useReactAriaTooltip, useTooltipTrigger } from \"@react-aria/tooltip\";\nimport { useOverlayPosition, useOverlay } from \"@react-aria/overlays\";\nimport { mapPropsVariants } from \"@nextui-org/system\";\nimport { popover } from \"@nextui-org/theme\";\nimport { clsx, dataAttr } from \"@nextui-org/shared-utils\";\nimport { mergeRefs } from \"@nextui-org/react-utils\";\nimport { createDOMRef } from \"@nextui-org/react-utils\";\nimport { useMemo, useRef, useCallback } from \"react\";\nimport { toReactAriaPlacement, getArrowPlacement } from \"@nextui-org/aria-utils\";\nfunction useTooltip(originalProps) {\n  const [props, variantProps] = mapPropsVariants(originalProps, popover.variantKeys);\n  const {\n    ref,\n    as,\n    isOpen: isOpenProp,\n    content,\n    children,\n    defaultOpen,\n    onOpenChange,\n    isDisabled,\n    trigger: triggerAction,\n    shouldFlip = true,\n    containerPadding = 12,\n    placement: placementProp = \"top\",\n    delay = 0,\n    closeDelay = 500,\n    showArrow = false,\n    offset = 7,\n    crossOffset = 0,\n    isDismissable,\n    shouldCloseOnBlur = true,\n    portalContainer,\n    isKeyboardDismissDisabled = false,\n    shouldCloseOnInteractOutside,\n    className,\n    onClose,\n    motionProps,\n    classNames,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const state = useTooltipTriggerState({\n    delay,\n    closeDelay,\n    isDisabled,\n    defaultOpen,\n    isOpen: isOpenProp,\n    onOpenChange: (isOpen2) => {\n      onOpenChange == null ? void 0 : onOpenChange(isOpen2);\n      if (!isOpen2) {\n        onClose == null ? void 0 : onClose();\n      }\n    }\n  });\n  const triggerRef = useRef(null);\n  const overlayRef = useRef(null);\n  const tooltipId = useId();\n  const isOpen = state.isOpen && !isDisabled;\n  useImperativeHandle(\n    ref,\n    () => createDOMRef(overlayRef)\n  );\n  const { triggerProps, tooltipProps: triggerTooltipProps } = useTooltipTrigger(\n    {\n      isDisabled,\n      trigger: triggerAction\n    },\n    state,\n    triggerRef\n  );\n  const { tooltipProps } = useReactAriaTooltip(\n    {\n      isOpen,\n      ...mergeProps(props, triggerTooltipProps)\n    },\n    state\n  );\n  const {\n    overlayProps: positionProps,\n    arrowProps,\n    placement\n  } = useOverlayPosition({\n    isOpen,\n    targetRef: triggerRef,\n    placement: toReactAriaPlacement(placementProp),\n    overlayRef,\n    offset: showArrow ? offset + 3 : offset,\n    crossOffset,\n    shouldFlip,\n    containerPadding\n  });\n  const { overlayProps } = useOverlay(\n    {\n      isOpen,\n      onClose: state.close,\n      isDismissable,\n      shouldCloseOnBlur,\n      isKeyboardDismissDisabled,\n      shouldCloseOnInteractOutside\n    },\n    overlayRef\n  );\n  const slots = useMemo(\n    () => {\n      var _a, _b, _c;\n      return popover({\n        ...variantProps,\n        radius: (_a = originalProps == null ? void 0 : originalProps.radius) != null ? _a : \"md\",\n        size: (_b = originalProps == null ? void 0 : originalProps.size) != null ? _b : \"md\",\n        shadow: (_c = originalProps == null ? void 0 : originalProps.shadow) != null ? _c : \"sm\"\n      });\n    },\n    [\n      ...Object.values(variantProps),\n      originalProps == null ? void 0 : originalProps.radius,\n      originalProps == null ? void 0 : originalProps.size,\n      originalProps == null ? void 0 : originalProps.shadow\n    ]\n  );\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const getTriggerProps = useCallback(\n    (props2 = {}, _ref = null) => ({\n      ...mergeProps(triggerProps, props2),\n      ref: mergeRefs(_ref, triggerRef),\n      \"aria-describedby\": isOpen ? tooltipId : void 0\n    }),\n    [triggerProps, isOpen, tooltipId, state]\n  );\n  const getTooltipProps = useCallback(\n    () => ({\n      ref: overlayRef,\n      \"data-open\": dataAttr(isOpen),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-placement\": getArrowPlacement(placement, placementProp),\n      className: slots.base({ class: baseStyles }),\n      ...mergeProps(tooltipProps, overlayProps, otherProps),\n      style: mergeProps(positionProps.style, otherProps.style, props.style),\n      id: tooltipId\n    }),\n    [\n      baseStyles,\n      overlayProps,\n      otherProps,\n      overlayRef,\n      positionProps,\n      slots,\n      tooltipId,\n      tooltipProps\n    ]\n  );\n  const getArrowProps = useCallback(\n    () => ({\n      className: slots.arrow({ class: classNames == null ? void 0 : classNames.arrow }),\n      \"data-placement\": getArrowPlacement(placement, placementProp),\n      ...arrowProps\n    }),\n    [arrowProps, placement, placementProp, slots, classNames]\n  );\n  return {\n    Component,\n    content,\n    children,\n    isOpen,\n    triggerRef,\n    showArrow,\n    portalContainer,\n    placement: placementProp,\n    disableAnimation: originalProps == null ? void 0 : originalProps.disableAnimation,\n    isDisabled,\n    motionProps,\n    getTriggerProps,\n    getTooltipProps,\n    getArrowProps\n  };\n}\n\nexport {\n  useTooltip\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}