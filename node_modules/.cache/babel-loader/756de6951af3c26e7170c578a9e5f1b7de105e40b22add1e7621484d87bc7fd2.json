{"ast":null,"code":"\"use client\";\n\n// src/use-button-group.ts\nimport _toConsumableArray from \"/Users/elisabjorg/Documents/my-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/elisabjorg/Documents/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/elisabjorg/Documents/my-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"/Users/elisabjorg/Documents/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"ref\", \"as\", \"children\", \"color\", \"size\", \"variant\", \"radius\", \"isDisabled\", \"disableAnimation\", \"disableRipple\", \"isIconOnly\", \"className\"];\nimport { buttonGroup } from \"@nextui-org/theme\";\nimport { mapPropsVariants } from \"@nextui-org/system\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { useMemo, useCallback } from \"react\";\nfunction useButtonGroup(originalProps) {\n  var _mapPropsVariants = mapPropsVariants(originalProps, buttonGroup.variantKeys),\n    _mapPropsVariants2 = _slicedToArray(_mapPropsVariants, 2),\n    props = _mapPropsVariants2[0],\n    variantProps = _mapPropsVariants2[1];\n  var ref = props.ref,\n    as = props.as,\n    children = props.children,\n    _props$color = props.color,\n    color = _props$color === void 0 ? \"default\" : _props$color,\n    _props$size = props.size,\n    size = _props$size === void 0 ? \"md\" : _props$size,\n    _props$variant = props.variant,\n    variant = _props$variant === void 0 ? \"solid\" : _props$variant,\n    radius = props.radius,\n    _props$isDisabled = props.isDisabled,\n    isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled,\n    _props$disableAnimati = props.disableAnimation,\n    disableAnimation = _props$disableAnimati === void 0 ? false : _props$disableAnimati,\n    _props$disableRipple = props.disableRipple,\n    disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n    _props$isIconOnly = props.isIconOnly,\n    isIconOnly = _props$isIconOnly === void 0 ? false : _props$isIconOnly,\n    className = props.className,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var Component = as || \"div\";\n  var domRef = useDOMRef(ref);\n  var classNames = useMemo(function () {\n    return buttonGroup(_objectSpread(_objectSpread({}, variantProps), {}, {\n      className: className\n    }));\n  }, [].concat(_toConsumableArray(Object.values(variantProps)), [className]));\n  var context = useMemo(function () {\n    return {\n      size: size,\n      color: color,\n      variant: variant,\n      radius: radius,\n      isIconOnly: isIconOnly,\n      isDisabled: isDisabled,\n      disableAnimation: disableAnimation,\n      disableRipple: disableRipple,\n      fullWidth: !!(originalProps == null ? void 0 : originalProps.fullWidth)\n    };\n  }, [size, color, variant, radius, isDisabled, isIconOnly, disableAnimation, disableRipple, originalProps == null ? void 0 : originalProps.fullWidth]);\n  var getButtonGroupProps = useCallback(function () {\n    return _objectSpread({\n      role: \"group\"\n    }, otherProps);\n  }, [otherProps]);\n  return {\n    Component: Component,\n    children: children,\n    domRef: domRef,\n    context: context,\n    classNames: classNames,\n    getButtonGroupProps: getButtonGroupProps\n  };\n}\nexport { useButtonGroup };","map":{"version":3,"names":["_toConsumableArray","_objectSpread","_objectWithoutProperties","_slicedToArray","_excluded","buttonGroup","mapPropsVariants","useDOMRef","useMemo","useCallback","useButtonGroup","originalProps","_mapPropsVariants","variantKeys","_mapPropsVariants2","props","variantProps","ref","as","children","_props$color","color","_props$size","size","_props$variant","variant","radius","_props$isDisabled","isDisabled","_props$disableAnimati","disableAnimation","_props$disableRipple","disableRipple","_props$isIconOnly","isIconOnly","className","otherProps","Component","domRef","classNames","concat","Object","values","context","fullWidth","getButtonGroupProps","role"],"sources":["/Users/elisabjorg/Documents/my-app/node_modules/@nextui-org/button/dist/chunk-ZTLH2HDB.mjs"],"sourcesContent":["\"use client\";\n\n// src/use-button-group.ts\nimport { buttonGroup } from \"@nextui-org/theme\";\nimport { mapPropsVariants } from \"@nextui-org/system\";\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { useMemo, useCallback } from \"react\";\nfunction useButtonGroup(originalProps) {\n  const [props, variantProps] = mapPropsVariants(originalProps, buttonGroup.variantKeys);\n  const {\n    ref,\n    as,\n    children,\n    color = \"default\",\n    size = \"md\",\n    variant = \"solid\",\n    radius,\n    isDisabled = false,\n    disableAnimation = false,\n    disableRipple = false,\n    isIconOnly = false,\n    className,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const domRef = useDOMRef(ref);\n  const classNames = useMemo(\n    () => buttonGroup({\n      ...variantProps,\n      className\n    }),\n    [...Object.values(variantProps), className]\n  );\n  const context = useMemo(\n    () => ({\n      size,\n      color,\n      variant,\n      radius,\n      isIconOnly,\n      isDisabled,\n      disableAnimation,\n      disableRipple,\n      fullWidth: !!(originalProps == null ? void 0 : originalProps.fullWidth)\n    }),\n    [\n      size,\n      color,\n      variant,\n      radius,\n      isDisabled,\n      isIconOnly,\n      disableAnimation,\n      disableRipple,\n      originalProps == null ? void 0 : originalProps.fullWidth\n    ]\n  );\n  const getButtonGroupProps = useCallback(\n    () => ({\n      role: \"group\",\n      ...otherProps\n    }),\n    [otherProps]\n  );\n  return {\n    Component,\n    children,\n    domRef,\n    context,\n    classNames,\n    getButtonGroupProps\n  };\n}\n\nexport {\n  useButtonGroup\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AAAA,OAAAA,kBAAA;AAAA,OAAAC,aAAA;AAAA,OAAAC,wBAAA;AAAA,OAAAC,cAAA;AAAA,IAAAC,SAAA;AACA,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AAC5C,SAASC,cAAcA,CAACC,aAAa,EAAE;EACrC,IAAAC,iBAAA,GAA8BN,gBAAgB,CAACK,aAAa,EAAEN,WAAW,CAACQ,WAAW,CAAC;IAAAC,kBAAA,GAAAX,cAAA,CAAAS,iBAAA;IAA/EG,KAAK,GAAAD,kBAAA;IAAEE,YAAY,GAAAF,kBAAA;EAC1B,IACEG,GAAG,GAaDF,KAAK,CAbPE,GAAG;IACHC,EAAE,GAYAH,KAAK,CAZPG,EAAE;IACFC,QAAQ,GAWNJ,KAAK,CAXPI,QAAQ;IAAAC,YAAA,GAWNL,KAAK,CAVPM,KAAK;IAALA,KAAK,GAAAD,YAAA,cAAG,SAAS,GAAAA,YAAA;IAAAE,WAAA,GAUfP,KAAK,CATPQ,IAAI;IAAJA,IAAI,GAAAD,WAAA,cAAG,IAAI,GAAAA,WAAA;IAAAE,cAAA,GASTT,KAAK,CARPU,OAAO;IAAPA,OAAO,GAAAD,cAAA,cAAG,OAAO,GAAAA,cAAA;IACjBE,MAAM,GAOJX,KAAK,CAPPW,MAAM;IAAAC,iBAAA,GAOJZ,KAAK,CANPa,UAAU;IAAVA,UAAU,GAAAD,iBAAA,cAAG,KAAK,GAAAA,iBAAA;IAAAE,qBAAA,GAMhBd,KAAK,CALPe,gBAAgB;IAAhBA,gBAAgB,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;IAAAE,oBAAA,GAKtBhB,KAAK,CAJPiB,aAAa;IAAbA,aAAa,GAAAD,oBAAA,cAAG,KAAK,GAAAA,oBAAA;IAAAE,iBAAA,GAInBlB,KAAK,CAHPmB,UAAU;IAAVA,UAAU,GAAAD,iBAAA,cAAG,KAAK,GAAAA,iBAAA;IAClBE,SAAS,GAEPpB,KAAK,CAFPoB,SAAS;IACNC,UAAU,GAAAlC,wBAAA,CACXa,KAAK,EAAAX,SAAA;EACT,IAAMiC,SAAS,GAAGnB,EAAE,IAAI,KAAK;EAC7B,IAAMoB,MAAM,GAAG/B,SAAS,CAACU,GAAG,CAAC;EAC7B,IAAMsB,UAAU,GAAG/B,OAAO,CACxB;IAAA,OAAMH,WAAW,CAAAJ,aAAA,CAAAA,aAAA,KACZe,YAAY;MACfmB,SAAS,EAATA;IAAS,EACV,CAAC;EAAA,MAAAK,MAAA,CAAAxC,kBAAA,CACEyC,MAAM,CAACC,MAAM,CAAC1B,YAAY,CAAC,IAAEmB,SAAS,EAC5C,CAAC;EACD,IAAMQ,OAAO,GAAGnC,OAAO,CACrB;IAAA,OAAO;MACLe,IAAI,EAAJA,IAAI;MACJF,KAAK,EAALA,KAAK;MACLI,OAAO,EAAPA,OAAO;MACPC,MAAM,EAANA,MAAM;MACNQ,UAAU,EAAVA,UAAU;MACVN,UAAU,EAAVA,UAAU;MACVE,gBAAgB,EAAhBA,gBAAgB;MAChBE,aAAa,EAAbA,aAAa;MACbY,SAAS,EAAE,CAAC,EAAEjC,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACiC,SAAS;IACxE,CAAC;EAAA,CAAC,EACF,CACErB,IAAI,EACJF,KAAK,EACLI,OAAO,EACPC,MAAM,EACNE,UAAU,EACVM,UAAU,EACVJ,gBAAgB,EAChBE,aAAa,EACbrB,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACiC,SAAS,CAE5D,CAAC;EACD,IAAMC,mBAAmB,GAAGpC,WAAW,CACrC;IAAA,OAAAR,aAAA;MACE6C,IAAI,EAAE;IAAO,GACVV,UAAU;EAAA,CACb,EACF,CAACA,UAAU,CACb,CAAC;EACD,OAAO;IACLC,SAAS,EAATA,SAAS;IACTlB,QAAQ,EAARA,QAAQ;IACRmB,MAAM,EAANA,MAAM;IACNK,OAAO,EAAPA,OAAO;IACPJ,UAAU,EAAVA,UAAU;IACVM,mBAAmB,EAAnBA;EACF,CAAC;AACH;AAEA,SACEnC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}